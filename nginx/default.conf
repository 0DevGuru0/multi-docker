log_format compression '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $bytes_sent '
                       '"$http_referer" "$http_user_agent" "$gzip_ratio" "$http_x_real_ip"';
upstream client{
    server  client:3000 max_fails=3 fail_timeout=30s ;
}

upstream api {
    server api:5000 max_fails=3 fail_timeout=30s;;
}
 
match test {
    status 200-399;
    body !~ "404 not found";
}
keepalive_timeout 65s;
server {
    listen 80;
    
    location / {
        proxy_pass http://client;
        expires 1y;
        add_header Cache-Control "must-revalidate";
        health_check intervals=5 fails=3 passes=2;
        add_header 'Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type';
    }
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        health_check intervals=5 fails=3 passes=2;

    }
    location /api{
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
        health_check intervals=5 fails=3 passes=2;
    }

    location ~* \.(css|js|jpe?g|JPG|png){
        root /var/www/assets;
        try_files $uri $uri/;
    }
}